"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[7441],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7769:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},c="Cohort mode",s={unversionedId:"execmodes/cohort",id:"execmodes/cohort",title:"Cohort mode",description:"A minimum cohort size of 100 is required, and a roughly equal",source:"@site/docs/execmodes/cohort.md",sourceDirName:"execmodes",slug:"/execmodes/cohort",permalink:"/gatk-sv/docs/execmodes/cohort",draft:!1,editUrl:"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/execmodes/cohort.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Single-sample execution mode",permalink:"/gatk-sv/docs/execmodes/singlesample"},next:{title:"Run",permalink:"/gatk-sv/docs/category/run"}},i={},l=[],p={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cohort-mode"},"Cohort mode"),(0,o.kt)("p",null,"A minimum cohort size of 100 is required, and a roughly equal\nnumber of males and females is recommended. For modest cohorts\n(~100-500 samples), the pipeline can be run as a single batch\nusing ",(0,o.kt)("inlineCode",{parentName:"p"},"GATKSVPipelineBatch.wdl"),"."),(0,o.kt)("p",null,"For larger cohorts, samples should be split up into batches of\nabout 100-500 samples. "),(0,o.kt)("p",null,"The pipeline should be executed as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Modules ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gse"},"GatherSampleEvidence")," and\n",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/eqc"},"EvidenceQC")," can be run on arbitrary cohort partitions")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Modules ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gbe"},"GatherBatchEvidence"),",\n",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/cb"},"ClusterBatch"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gbm"},"GenerateBatchMetrics"),",\nand ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/fb"},"FilterBatch")," are run separately per batch")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gb"},"GenotypeBatch")," is run separately per batch,\nusing filtered variants (",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/fb"},"FilterBatch")," output) combined across all batches")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/docs/modules/cvcf"},"MakeCohortVcf")," and beyond are run on all batches together"))),(0,o.kt)("p",null,"Note: ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gbe"},"GatherBatchEvidence")," requires a ",(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gcnv"},"trained gCNV model"),"."))}m.isMDXComponent=!0}}]);