"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[3630],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return t?r.createElement(g,o(o({ref:n},d),{},{components:t})):r.createElement(g,o({ref:n},d))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={title:"Overview",description:"Docker Concepts and Execution Overview",sidebar_position:0},o=void 0,s={unversionedId:"advanced/docker/index",id:"advanced/docker/index",title:"Overview",description:"Docker Concepts and Execution Overview",source:"@site/docs/advanced/docker/index.md",sourceDirName:"advanced/docker",slug:"/advanced/docker/",permalink:"/gatk-sv/docs/advanced/docker/",draft:!1,editUrl:"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/advanced/docker/index.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Overview",description:"Docker Concepts and Execution Overview",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Docker Images",permalink:"/gatk-sv/docs/category/docker-images"},next:{title:"Docker Images Hierarchy",permalink:"/gatk-sv/docs/advanced/docker/images"}},c={},l=[],d={toc:l},u="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To make the analysis process scalable, reproducible, and cost-efficient,\nGATK-SV is designed as a cloud-native pipeline,\nmeaning it runs on virtual machines (VMs) hosted in the cloud.\nThese VMs are pre-configured with all the necessary tools, scripts, and settings\nrequired to run the GATK-SV analysis reliably. "),(0,a.kt)("p",null,"To ensure that the analysis can be easily replicated and shared,\nGATK-SV utilizes Docker technology.\nDocker allows the tools and scripts, including all their dependencies and configurations,\nto be packaged into a self-contained unit called a container.\nThis container can be deployed and run on different VMs in the cloud,\nmaking the analysis process consistent and reproducible across multiple experiments or collaborations."),(0,a.kt)("p",null,"Docker containers are built from Docker images,\nwhich serve as the blueprints or templates for creating containers.\nDockerfiles are used to define the contents and behavior of a Docker image.\nA Dockerfile is a text file that contains a series of instructions,\nspecifying the base image, adding dependencies, configuring settings,\nand executing commands necessary to build the desired software environment within the container."),(0,a.kt)("p",null,"The following figure is a high-level illustration depicting the relationship\nbetween Dockerfiles, Docker images, Docker containers, and Cloud VMs."),(0,a.kt)("mermaid",{value:"\nflowchart LR\n    dockerfile[Dockerfile] -- Build --\x3e acr_image[Docker Image] & gcp_image[Docker Image]\n    \n    subgraph Microsoft Azure\n        subgraph ACR\n        acr_image\n        end\n    \n        subgraph Azure VM\n        acr_image -- Run  --\x3e az_container[Container]\n        end\n    end\n    \n    subgraph Google Cloud Platform\n        subgraph GCR\n        gcp_image\n        end\n    \n        subgraph GCP VM\n        gcp_image -- Run --\x3e gcp_container[Container]\n        end\n    end\n    "}),(0,a.kt)("p",null,"The GATK-SV Docker setup is organized as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Dockerfile"),":\nThese files define the instructions for building the necessary tools and\nconfigurations required for the GATK-SV pipeline.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Docker Images"),": Docker images are automatically built based on each Dockerfile.\nThese images are stored in both Azure Container Registry (ACR) and\nGoogle Cloud Container Registry (GCR). The images serve as self-contained\npackages that encapsulate all the tools needed for the GATK-SV pipeline.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Docker Containers"),": Cromwell, a workflow execution system, creates GATK-SV\nDocker containers on virtual machines within the Google Cloud Platform (GCP).\nThese containers are instantiated based on the Docker images obtained\nfrom GCR. The GATK-SV data analysis tasks are then executed within\nthese containers, providing a consistent and isolated environment."))),(0,a.kt)("p",null,"In summary, the GATK-SV Docker setup involves multiple Dockerfiles defining\nthe build instructions, resulting in Docker images that are stored in ACR and GCR.\nThese images are used to create Docker containers on GCP virtual machines through Cromwell,\nwhere the GATK-SV data analysis takes place."))}p.isMDXComponent=!0}}]);